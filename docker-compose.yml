services:
  streamops:
    image: streamops:latest
    build:
      context: .
      dockerfile: Dockerfile
    container_name: streamops
    ports:
      - "7767:7767"  # UI/API
      - "7768:7768"  # NATS Queue
      - "7769:7769"  # Overlay WebSocket
    volumes:
      # Persistent data directory (local folder instead of Docker volume)
      - ./data:/data
      
      # Hot reload for development (remove in production)
      # Mount only Python source directories to preserve built UI
      - ./app/api:/opt/streamops/app/api:ro
      - ./app/worker:/opt/streamops/app/worker:ro
      - ./app/overlay:/opt/streamops/app/overlay:ro
      
      # Configurable drive mounts (up to 3 roots)
      # Mount 1 - Primary drive
      - ${SO_MOUNT_1_HOST:-/mnt/d}:${SO_MOUNT_1_PATH:-/mnt/drive_d}:rw
      
      # Mount 2 - Optional secondary drive (remove if not needed)
      # - ${SO_MOUNT_2_HOST:-/mnt/e}:${SO_MOUNT_2_PATH:-/mnt/drive_e}:rw
      
      # Mount 3 - Optional third drive (remove if not needed)
      # - ${SO_MOUNT_3_HOST:-/mnt/f}:${SO_MOUNT_3_PATH:-/mnt/drive_f}:rw
      
    environment:
      - ROLE=all
      - NATS_ENABLE=true
      - LOG_LEVEL=debug
      
      # Mount configuration
      - SO_MOUNT_1_PATH=${SO_MOUNT_1_PATH:-/mnt/drive_d}
      - SO_MOUNT_1_LABEL=${SO_MOUNT_1_LABEL:-Drive D}
      - SO_MOUNT_1_WATCH=${SO_MOUNT_1_WATCH:-true}
      
      - SO_MOUNT_2_PATH=${SO_MOUNT_2_PATH:-/mnt/drive_e}
      - SO_MOUNT_2_LABEL=${SO_MOUNT_2_LABEL:-Drive E}
      - SO_MOUNT_2_WATCH=${SO_MOUNT_2_WATCH:-false}
      
      - SO_MOUNT_3_PATH=${SO_MOUNT_3_PATH:-/mnt/drive_f}
      - SO_MOUNT_3_LABEL=${SO_MOUNT_3_LABEL:-Drive F}
      - SO_MOUNT_3_WATCH=${SO_MOUNT_3_WATCH:-false}
      
      # Optional convenience role paths
      - SO_REC_PATH=${SO_REC_PATH:-}
      - SO_EDIT_PATH=${SO_EDIT_PATH:-}
      - SO_ARCHIVE_PATH=${SO_ARCHIVE_PATH:-}
      
      # OBS WebSocket
      - OBS_WS_URL=ws://host.docker.internal:4455
      - OBS_WS_PASSWORD=RealHardPassword1$
      
      # Performance settings
      - GPU_GUARD_PCT=40
      - CPU_GUARD_PCT=70
      - PAUSE_WHEN_RECORDING=true
      
      # NVIDIA GPU settings
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility,video
      - CUDA_VISIBLE_DEVICES=0
      
    # GPU support (uncomment if you have NVIDIA GPU)
    # runtime: nvidia  # Alternative to gpus for older Docker versions
    gpus: all
    
    restart: unless-stopped
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7767/health/live"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 40s

# Volumes section removed - using local ./data directory instead